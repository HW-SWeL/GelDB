@prefix api:    <http://purl.org/linked-data/api/vocab#> .
@prefix elda:   <http://www.epimorphics.com/vocabularies/lda#> .
@prefix gdbo:   <http://example.com/GelsOntology/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix gdb:    <http://example.com/gdb/> .
@prefix spec: <http://localhost:3030/gdb> .
@prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#> .

spec:minimal a api:API
        ; api:base "/"
        ; rdfs:label "a minimal demonstration API"
        ; api:sparqlEndpoint <http://localhost:3030/gdb/query>
# ; api:sparqlEndpoint <localhost:8080/rdf4j-server/repositories/test/query>
        ; api:defaultViewer api:labelledDescribeViewer
        ; api:defaultFormatter spec:HtmlFormatter
        ; api:viewer api:describeViewer, api:labelledDescribeViewer, api:basicViewer
        ; api:endpoint
                spec:try,
                spec:solvent
        ; api:variable [api:name "_exceptionIfEmpty"; api:value "no"]
        ; api:variable [api:name "_resourceRoot"; api:value "/elda-bundled/"]
        .


spec:HtmlFormatter a api:XsltFormatter
        ; api:name "html" 
        ; api:mimeType "text/html; charset=utf-8"
        ; api:stylesheet "http://localhost:8080/elda-assets/xslt/result.xsl"
        .


<http://localhost:3030/gdb/query>
        elda:supportsNestedSelect true.

#
# Describe a generic 'thing' as an example of an itemEndpoint.
#

#
# List 'anything' endpoint
#
#
# List things related to a 'mentions' as an example of a ListEndpoint.
#

spec:solvent a api:ListEndpoint;
api:uriTemplate "/solvent?resource={uri}";
        api:variable [api:name "uri"; api:type xsd:string];
        api:selector [api:select " select ?item where { ?item gdbo:solventReaction ?reaction . ?reaction gdbo:hasSolvent ?solvent . ?solvent gdbo:name ?uri }"];
        api:viewer api:newViewer;
        api:default api:newViewer;
        .
        
spec:try a api:ListEndpoint;
api:uriTemplate "/try?resource={uri}";
        api:variable [api:name "uri"; api:type xsd:string];
        api:selector [api:select " select ?item where{ {?item a gdbo:Gel .  ?item gdbo:name ?uri} UNION {?item a gdbo:Gel . ?item gdbo:InChI ?uri} }"];
        api:viewer api:newViewer;
        api:defaultViewer api:newViewer;
        .

        
 api:newViewer a api:Viewer;
    api:name "newViewer";
    api:template " ?item gdbo:name ?name . ?item ?a ?b . ?item gdbo:solventReaction ?reaction . ?reaction ?pp ?oo . ?reaction gdbo:hasCGC ?cgc . ?cgc gdbo:hasValue ?val ; gdbo:hasUnit ?unit . ?unit rdfs:label ?unitLabel . ?reaction ?p ?o . ?o gdbo:name ?solvent . ?o ?x ?y ";.

